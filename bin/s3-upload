#!/usr/bin/env ruby
#
# Uploads an image referenced by a URL to a bucket on Amazon S3. It returns the
# URL from S3.
#
# Example:
#
#   s3-upload http://gifs.carlosgaldino.com/balota.gif
#
# This requires the following gems: excon, fog.
#
# Requires your aws credentials in ~/.aws-credentials.yml file with the following
# keys:
#
#   access_key_id
#   secret_access_key
#   region
#   bucket
#
# It assumes you have a CNAME record with the same value of the `bucket`.

def image_properties(string)
  if File.file?(string)
    [File.open(string), "image/#{File.extname(string).delete('.')}"]
  else
    image = Excon.get(string)

    [image.body, image.headers['Content-Type']]
  end
end

if ARGV.empty?
  puts <<-STR
  You need to pass a link to an image.

  Example:
    s3-upload http://gifs.carlosgaldino.com/balota.gif
  STR
  exit!(1)
end

%w(excon fog yaml).each do |gem|
  begin
    require gem
  rescue LoadError
    puts "You must install the following gem: #{gem}"
    exit!(1)
  end
end

credentials_path = File.expand_path('~/.aws-credentials.yml')

unless File.exist?(credentials_path)
  puts <<-STR
  You need to add your credentials in '~/.aws-credentials.yml' with the following information:
    access_key_id
    secret_access_key
    region
    bucket
  STR
  exit!(1)
end

credentials = YAML::load_file(credentials_path)

Fog.credentials = { path_style: true }
s3 = Fog::Storage.new(provider: 'AWS', aws_access_key_id: credentials['access_key_id'],
                      aws_secret_access_key: credentials['secret_access_key'],
                      region: credentials['region'])

if s3.directories.find { |d| d.key == credentials['bucket'] }
  bucket = s3.directories.get(credentials['bucket'])
else
  puts "You first need to create the bucket '#{credentials['bucket']}'."
  exit!(1)
end

arg = ARGV.first

image_extension = File.extname(arg)

image_name = File.basename(arg, image_extension).gsub(/[[:space:]]/, '-')

image_body, content_type = image_properties(arg)

image_key = image_name + "#{Time.now.to_i}" + image_extension

bucket.files.create({
  key: image_key,
  public: true,
  body: image_body,
  content_type: content_type,
  metadata: { 'Cache-Control' => 'public, max-age=315360000' }
})

puts "http://#{credentials['bucket']}/#{image_key}"
